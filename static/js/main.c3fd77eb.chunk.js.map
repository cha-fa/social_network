{"version":3,"sources":["redux/authentication/authTypes.js","redux/authentication/authMiddleware.js","redux/authentication/authActions.js","components/Navbar.jsx","pages/Home/components/Jumbotron.jsx","pages/Login/Login.jsx","redux/posts/postsTypes.js","redux/posts/postsActions.js","redux/posts/postsMiddleware.js","components/Likes.jsx","components/PostCard.jsx","components/PostList.jsx","pages/Home/components/NewPost.jsx","pages/Home/Home.jsx","pages/Profile/EditProfile.jsx","pages/Profile/Profile.jsx","pages/Registration/Registration.jsx","components/RightNav.jsx","App.js","redux/authentication/authReducer.js","redux/posts/postsReducer.js","redux/store.js","index.jsx"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","EDIT_PROFILE","registerFetch","userData","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","error","user","token","jwt","Cookies","set","type","localStorage","setItem","console","log","message","messages","loginFetch","fetchEditProfile","Authorization","get","userLogout","remove","Navbar","currentUser","useDispatch","location","useLocation","history","useHistory","className","to","size","pathname","previous","username","onClick","push","Jumbotron","path","Login","useState","identifier","setIdentifier","password","setPassword","loginInfo","useSelector","state","auth","useEffect","onSubmit","event","preventDefault","id","name","required","value","onChange","e","target","FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","SET_POSTS_COUNT","ADD_POST_SUCCESS","ADD_POST_ERROR","EDIT_POST","DELETE_POST","editPost","post","fetchPosts","userSlug","postsURL","countURL","count","currentPosts","addPost","postData","fetchDeletePost","postID","Likes","alreadyLiked","likedUsers","filter","length","liked","setLiked","handleClick","isLiked","newLikedUsers","dataLike","like","likedUser","fetchEditLikes","PostCard","newText","useRef","editing","setEditing","text","setText","fetchEditPost","current","slug","ref","placeholder","defaultValue","format","created_at","window","confirm","PostList","posts","newPost","map","NewPost","handleNewPost","rows","maxLength","Home","setNewPost","EditProfile","setUsername","description","setDescription","for","Profile","useParams","setUser","url","fetchUserProfile","email","Registration","register","setEmail","RightNav","searchInput","setSearchInput","keywordPosts","setKeywordPosts","searchInputUser","setSearchInputUser","keywordUsers","setKeywordUsers","App","PrivateRoute","Component","component","rest","render","props","basename","process","exact","userObj","parse","getItem","initialUser","initialState","isLoggedIn","authReducer","action","loading","postsReducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3fd77eb.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\n\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT = \"LOGOUT\";\nexport const EDIT_PROFILE = \"EDIT_PROFILE\";\n","import Cookies from \"js-cookie\";\nimport {\n  registerFailure,\n  registerSuccess,\n  loginFailure,\n  loginSuccess,\n  logout,\n  editProfile,\n} from \"./authActions\";\n\nexport const registerFetch = (userData) => {\n  return (dispatch) => {\n    const registerURL =\n      \"http://thp-strapi-social-network.herokuapp.com/auth/local/register\";\n\n    fetch(registerURL, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.jwt) {\n          Cookies.set(\"token\", response.jwt);\n          dispatch(registerSuccess(response.user, response.jwt));\n          localStorage.setItem(\n            \"thp_social_network_user_obj\",\n            JSON.stringify(response)\n          );\n        } else {\n          console.log(response);\n          dispatch(registerFailure(response.message[0].messages[0].message));\n        }\n      });\n  };\n};\n\nexport const loginFetch = (userData) => {\n  return (dispatch) => {\n    const loginURL =\n      \"http://thp-strapi-social-network.herokuapp.com/auth/local\";\n\n    fetch(loginURL, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.jwt) {\n          Cookies.set(\"token\", response.jwt);\n          dispatch(loginSuccess(response.user, response.jwt));\n          localStorage.setItem(\n            \"thp_social_network_user_obj\",\n            JSON.stringify(response)\n          );\n        } else {\n          console.log(response);\n          dispatch(loginFailure(response.message[0].messages[0].message));\n        }\n      });\n  };\n};\n\nexport const fetchEditProfile = (userData) => {\n  return (dispatch) => {\n    const loginURL = \"http://thp-strapi-social-network.herokuapp.com/users/me\";\n\n    fetch(loginURL, {\n      method: \"put\",\n      headers: {\n        Authorization: `Bearer ${Cookies.get(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          dispatch(editProfile(response));\n        }\n      });\n  };\n};\n\nexport const userLogout = () => {\n  return (dispatch) => {\n    Cookies.remove(\"token\");\n    dispatch(logout());\n    console.log(\"USER WAS LOGGED OUT\");\n  };\n};\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n  EDIT_PROFILE,\n} from \"./authTypes\";\n\nexport const registerFailure = (error) => {\n  return {\n    type: REGISTER_FAILURE,\n    error,\n  };\n};\n\nexport const registerSuccess = (user, token) => {\n  return {\n    type: REGISTER_SUCCESS,\n    user,\n    token,\n  };\n};\n\nexport const loginFailure = (error) => {\n  return {\n    type: LOGIN_FAILURE,\n    error,\n  };\n};\n\nexport const loginSuccess = (user, token) => {\n  return {\n    type: LOGIN_SUCCESS,\n    user,\n    token,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const editProfile = (user) => {\n  return {\n    type: EDIT_PROFILE,\n    user,\n  };\n};\n","import React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { userLogout } from \"redux/authentication/authMiddleware\";\nimport {\n  RiKakaoTalkLine,\n  RiLogoutCircleRLine,\n  RiLoginCircleLine,\n  RiUserHeartLine,\n} from \"react-icons/ri\";\nimport { BiUserCircle, BiHomeHeart } from \"react-icons/bi\";\nimport \"./navbar.scss\";\n\nconst Navbar = ({ currentUser }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const handleClick = () => {\n    dispatch(userLogout());\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"Navbar\">\n      <ul>\n        <header>\n          <Link to=\"/\">\n            <RiKakaoTalkLine size={100} className=\"mb-3\" />\n            <div>\n              <BiHomeHeart size={30} className=\"mr-2\" />\n              Home\n            </div>\n          </Link>\n        </header>\n        <div className=\"Authentication\">\n          {!currentUser && (\n            <>\n              <RiLoginCircleLine size={30} className=\"mr-2\" />\n              <Link\n                to={{\n                  pathname: \"/login\",\n                  previous: { location: location },\n                }}\n              >\n                Login\n              </Link>\n              <p>\n                <span>\n                  <RiUserHeartLine size={30} className=\"mr-2\" />\n                </span>\n                <Link to=\"/register\">Create an account</Link>\n              </p>\n            </>\n          )}\n          {currentUser && (\n            <>\n              <BiUserCircle size={30} className=\"mr-2\" />\n              <Link to={\"/profile\"}>@{currentUser.username}</Link>\n              <p onClick={handleClick}>\n                <span>\n                  <RiLogoutCircleRLine className=\"mr-2\" size={30} />\n                </span>\n                Log out\n              </p>\n            </>\n          )}\n        </div>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Jumbotron = () => {\n  const location = useLocation();\n  const path = location.pathname;\n  console.log(location);\n  return (\n    <div className=\"Jumbotron \">\n      <div className=\"text-right\">\n        {(path === \"/login\" && (\n          <>\n            <h2> WELCOME BACK</h2>\n            <h4> We missed you!</h4>\n          </>\n        )) || (\n          <>\n            <h2> WELCOME ON MY SOCIAL NETWORK</h2>\n            <h5>\n              {\" \"}\n              This website is a training to Redux and React. <br />\n              We use auth and routing to create a small social media website.\n            </h5>\n            <Link to=\"/register\">JOIN US</Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Jumbotron;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginFetch } from \"redux/authentication/authMiddleware\";\nimport { useHistory } from \"react-router-dom\";\nimport Jumbotron from \"pages/Home/components/Jumbotron\";\n\nconst Login = ({ location }) => {\n  const [identifier, setIdentifier] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const loginInfo = useSelector((state) => state.auth);\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      identifier: identifier,\n      password: password,\n    };\n    dispatch(loginFetch(userData));\n  };\n\n  useEffect(() => {\n    if (loginInfo.user) {\n      const path = location.previous\n        ? location.previous.location.pathname\n        : \"/\";\n      history.push(path);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loginInfo]);\n\n  return (\n    <div className=\"Login\">\n      <Jumbotron />\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <p>Username or Email:</p>\n          <input\n            type=\"text\"\n            id=\"identifier\"\n            name=\"identifier\"\n            required\n            value={identifier}\n            onChange={(e) => setIdentifier(e.target.value)}\n          />\n        </div>\n        <div>\n          <p>Password:</p>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <input type=\"submit\" value=\"Sign in\"></input>\n      </form>\n      {loginInfo.error && <p> Erreur : {loginInfo.error}</p>}\n    </div>\n  );\n};\n\nexport default Login;\n","export const FETCH_POSTS_REQUEST = \"FETCH_POSTS_REQUEST\";\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const FETCH_POSTS_ERROR = \"FETCH_POSTS_ERROR\";\nexport const SET_POSTS_COUNT = \"SET_POSTS_COUNT\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_ERROR = \"ADD_POST_ERROR\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n","import {\n  FETCH_POSTS_REQUEST,\n  FETCH_POSTS_SUCCESS,\n  FETCH_POSTS_ERROR,\n  SET_POSTS_COUNT,\n  ADD_POST_SUCCESS,\n  ADD_POST_ERROR,\n  EDIT_POST,\n  DELETE_POST,\n} from \"./postsTypes\";\n\nexport const fetchPostsRequest = () => {\n  return {\n    type: FETCH_POSTS_REQUEST,\n  };\n};\n\nexport const fetchPostsSuccess = (currentPosts) => {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    currentPosts,\n  };\n};\n\nexport const fetchPostsError = (error) => {\n  return {\n    type: FETCH_POSTS_ERROR,\n    error,\n  };\n};\n\nexport const setPostsCount = (count) => {\n  return {\n    type: SET_POSTS_COUNT,\n    count,\n  };\n};\n\nexport const addPostSuccess = (post) => {\n  return {\n    type: ADD_POST_SUCCESS,\n    post,\n  };\n};\n\nexport const addPostError = (error) => {\n  return {\n    type: ADD_POST_ERROR,\n    error,\n  };\n};\n\nexport const editPost = (post) => {\n  return {\n    type: EDIT_POST,\n    post,\n  };\n};\n\nexport const deletePost = (post) => {\n  return {\n    type: DELETE_POST,\n    post,\n  };\n};\n","import {\n  fetchPostsError,\n  fetchPostsRequest,\n  fetchPostsSuccess,\n  setPostsCount,\n  addPostError,\n  addPostSuccess,\n  editPost,\n  deletePost,\n} from \"./postsActions\";\n\nimport Cookies from \"js-cookie\";\n\nexport const fetchPosts = (userSlug) => {\n  return (dispatch) => {\n    let postsURL =\n      \"http://thp-strapi-social-network.herokuapp.com/posts?_sort=created_at:DESC\";\n    let countURL =\n      \"http://thp-strapi-social-network.herokuapp.com/posts/count?_sort=created_at:DESC\";\n    if (userSlug) {\n      postsURL = `http://thp-strapi-social-network.herokuapp.com/posts?_sort=created_at:DESC&user.slug=${userSlug}`;\n      countURL = `http://thp-strapi-social-network.herokuapp.com/posts/count?_sort=created_at:DESC&user.slug=${userSlug}`;\n    }\n\n    dispatch(fetchPostsRequest());\n\n    fetch(countURL)\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.error) {\n          dispatch(setPostsCount(response));\n        }\n      });\n\n    fetch(postsURL)\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.error) {\n          dispatch(fetchPostsSuccess(response));\n        } else {\n          dispatch(fetchPostsError(response.error));\n        }\n      });\n  };\n};\n\nexport const addPost = (postData) => {\n  return (dispatch) => {\n    const addURL = \"https://thp-strapi-social-network.herokuapp.com/posts\";\n    fetch(addURL, {\n      method: \"post\",\n      headers: {\n        Authorization: `Bearer ${Cookies.get(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(postData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.error) {\n          dispatch(addPostSuccess(response));\n        } else {\n          console.log(response);\n          dispatch(addPostError(response));\n        }\n      });\n  };\n};\n\nexport const fetchEditPost = (text, postID) => {\n  return (dispatch) => {\n    fetch(`http://thp-strapi-social-network.herokuapp.com/posts/${postID}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `Bearer ${Cookies.get(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text: text }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          dispatch(editPost(response));\n        }\n      });\n  };\n};\n\nexport const fetchDeletePost = (postID) => {\n  return (dispatch) => {\n    fetch(`http://thp-strapi-social-network.herokuapp.com/posts/${postID}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: `Bearer ${Cookies.get(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          dispatch(deletePost(response));\n        }\n      });\n  };\n};\n\nexport const fetchEditLikes = (isLiked, post, user) => {\n  return (dispatch) => {\n    let newLikedUsers;\n    if (isLiked) {\n      newLikedUsers = [...post.likedUsers, user];\n    } else {\n      newLikedUsers = post.likedUsers.filter(\n        (likedUser) => likedUser.id !== user.id\n      );\n    }\n\n    const dataLike = {\n      like: newLikedUsers.length,\n      likedUsers: newLikedUsers,\n    };\n\n    fetch(`http://thp-strapi-social-network.herokuapp.com/posts/${post.id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `Bearer ${Cookies.get(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(dataLike),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.error) {\n          dispatch(editPost(response));\n        }\n      });\n  };\n};\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchEditLikes } from \"redux/posts/postsMiddleware\";\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\n\nconst Likes = ({ post, currentUser }) => {\n  const alreadyLiked =\n    post.likedUsers.filter((user) => user.id === currentUser.id).length > 0\n      ? true\n      : false;\n\n  const [liked, setLiked] = useState(alreadyLiked);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(fetchEditLikes(!liked, post, currentUser));\n    setLiked(!liked);\n  };\n\n  return (\n    <span className=\"Likes\">\n      {currentUser && (\n        <>\n          {(liked && <AiFillHeart size={30} onClick={handleClick} />) || (\n            <AiOutlineHeart size={30} onClick={handleClick} />\n          )}{\" \"}\n          {post.likedUsers.length}\n        </>\n      )}\n    </span>\n  );\n};\n\nexport default Likes;\n","import { useState, useRef } from \"react\";\nimport { fetchDeletePost, fetchEditPost } from \"redux/posts/postsMiddleware\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Likes from \"./Likes\";\nimport DayJS from \"react-dayjs\";\nimport {\n  AiOutlineCheckSquare,\n  AiOutlineEdit,\n  AiOutlineDelete,\n} from \"react-icons/ai\";\n\nconst PostCard = ({ post }) => {\n  const newText = useRef();\n  const [editing, setEditing] = useState(false);\n  const currentUser = useSelector((state) => state.auth.user);\n  const [text, setText] = useState(post.text);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (!editing) {\n      setEditing(true);\n    } else {\n      dispatch(fetchEditPost(newText.current.value, post.id));\n      setText(newText.current.value);\n      setEditing(false);\n    }\n  };\n\n  const handleDelete = () => {\n    if (window.confirm(\"Es-tu sûr ? Cette action est irréversible\")) {\n      dispatch(fetchDeletePost(post.id));\n    }\n  };\n\n  return (\n    <div className=\"PostCard\">\n      {currentUser && (\n        <div>\n          <Link to={\"/users/\" + post.user.slug}>@{post.user.username}</Link>\n        </div>\n      )}\n\n      {(currentUser && currentUser.id === post.user.id && editing && (\n        <input ref={newText} placeholder={text} defaultValue={text} />\n      )) ||\n        (currentUser && (\n          <div className=\"PostCard_content\">\n            {<p>{text}</p>} <Likes currentUser={currentUser} post={post} />\n          </div>\n        )) || <p>{text}</p>}\n\n      <div className=\"PostCard_footer\">\n        <DayJS format=\"MM/DD/YYYY à HH:MM\">{post.created_at}</DayJS>\n\n        {currentUser && post.user.id === currentUser.id && (\n          <>\n            {(!editing && (\n              <span className=\"ml-3\">\n                <AiOutlineEdit size={30} onClick={handleClick} />\n              </span>\n            )) || (\n              <span className=\"ml-3\">\n                <AiOutlineCheckSquare onClick={handleClick} size={30} />\n              </span>\n            )}\n\n            <AiOutlineDelete\n              className=\"ml-3\"\n              size={30}\n              onClick={handleDelete}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","import PostCard from \"./PostCard\";\nimport { useEffect } from \"react\";\n\nconst PostList = ({ posts, newPost }) => {\n  useEffect(() => {\n    console.log(\"new post has been published\");\n  }, [posts, newPost]);\n\n  return (\n    <div className=\"PostList\">\n      <div className=\"d-flex justify-content-end mr-2\">\n        <p>{posts.count} posts</p>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <ul className=\"m-0 p-0\">\n          {posts.currentPosts &&\n            posts.currentPosts.map((post) => (\n              <PostCard key={post.id} post={post} />\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PostList;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addPost } from \"redux/posts/postsMiddleware\";\nimport { AiOutlineSend } from \"react-icons/ai\";\n\nconst NewPost = ({ currentUser, handleNewPost }) => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n\n  const handleClick = () => {\n    const postData = {\n      text: text,\n      user: currentUser.id,\n    };\n    dispatch(addPost(postData));\n    handleNewPost(postData);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"NewPost\">\n      <form>\n        <div className=\"d-flex align-content-center justify-content-center\">\n          <textarea\n            type=\"text\"\n            id=\"text\"\n            name=\"text\"\n            placeholder=\"What's on your mind?\"\n            required\n            rows=\"3\"\n            maxLength=\"280\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n\n          <AiOutlineSend\n            className=\"ml-5 d-flex align-self-center\"\n            size={40}\n            onClick={handleClick}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPost;\n","import PostList from \"components/PostList\";\nimport NewPost from \"pages/Home/components/NewPost\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts } from \"redux/posts/postsMiddleware\";\nimport Jumbotron from \"./components/Jumbotron\";\n\nconst Home = ({ currentUser }) => {\n  const [newPost, setNewPost] = useState();\n  const handleNewPost = (post) => {\n    setNewPost(post);\n  };\n\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n    console.log(\"Ishould rerender\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [newPost]);\n\n  return (\n    <div className=\"Home\">\n      {(currentUser && (\n        <NewPost currentUser={currentUser} handleNewPost={handleNewPost} />\n      )) || <Jumbotron />}\n      <PostList posts={posts} newPost={newPost} />\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchEditProfile } from \"redux/authentication/authMiddleware\";\nimport { AiOutlineCheckSquare } from \"react-icons/ai\";\n\nconst EditProfile = () => {\n  const loginInfo = useSelector((state) => state.auth);\n  const currentUser = loginInfo.user;\n  const [username, setUsername] = useState(currentUser.username);\n  const [description, setDescription] = useState(currentUser.description);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    const userData = {\n      username: username,\n      description: description,\n    };\n    dispatch(fetchEditProfile(userData));\n  };\n\n  return (\n    <div className=\"EditProfile\">\n      <form>\n        <div>\n          <label for=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label for=\"description\">Bio:</label>\n          <textarea\n            type=\"text\"\n            required\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n\n        <AiOutlineCheckSquare size={30} onClick={handleClick} />\n      </form>\n      {loginInfo.error && <p> Erreur : {loginInfo.error}</p>}\n    </div>\n  );\n};\n\nexport default EditProfile;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { fetchPosts } from \"redux/posts/postsMiddleware\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostList from \"components/PostList\";\nimport EditProfile from \"./EditProfile\";\nimport { BiUserCircle } from \"react-icons/bi\";\n\nimport {\n  AiOutlineCheckSquare,\n  AiOutlineEdit,\n  AiOutlineDelete,\n} from \"react-icons/ai\";\n\nconst Profile = ({ currentUser }) => {\n  const { userSlug } = useParams();\n  const [user, setUser] = useState(currentUser);\n  const [editing, setEditing] = useState(false);\n  const posts = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n\n  const fetchUserProfile = () => {\n    let url;\n    if (!userSlug) {\n      console.log(\"NO USER SLUG\");\n      url = `http://thp-strapi-social-network.herokuapp.com/users/me`;\n    } else {\n      url = `http://thp-strapi-social-network.herokuapp.com/users?slug=${userSlug}`;\n    }\n\n    fetch(url, {\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${Cookies.get(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => setUser(response[0]));\n  };\n\n  useEffect(() => {\n    if (!userSlug) {\n      setUser(currentUser);\n      dispatch(fetchPosts(currentUser.slug));\n    } else {\n      fetchUserProfile();\n      dispatch(fetchPosts(userSlug));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userSlug]);\n\n  return (\n    <div className=\"Profile\">\n      {user && (\n        <>\n          <h4>\n            <BiUserCircle size={50} className=\"mr-2\" />\n            {user.username}\n          </h4>\n\n          <ul>\n            <h5>Email:</h5>\n            <p>{user.email}</p>\n            {user.description && (\n              <>\n                <h5>Bio: </h5>\n                <p>{user.description}</p>\n              </>\n            )}\n          </ul>\n        </>\n      )}\n      {user && user.id === currentUser.id && editing && <EditProfile />}\n      {user && user.id === currentUser.id && !editing && (\n        <span>\n          <AiOutlineEdit size={30} onClick={() => setEditing(!editing)} />\n        </span>\n      )}\n      <PostList posts={posts} />\n    </div>\n  );\n};\n\nexport default Profile;\n","import Jumbotron from \"pages/Home/components/Jumbotron\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerFetch } from \"redux/authentication/authMiddleware\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Registration = () => {\n  const dispatch = useDispatch();\n  const register = useSelector((state) => state);\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      username: username,\n      email: email,\n      password: password,\n    };\n    dispatch(registerFetch(userData));\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"Registration\">\n      <Jumbotron />\n\n      <h2>Account Creation</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <p>Username:</p>\n          <input\n            type=\"text\"\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <p>Email:</p>\n          <input\n            type=\"text\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <p>Password:</p>\n          <input\n            type=\"password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <input type=\"submit\" value=\"Sign up\"></input>\n      </form>\n      {register.error && <p> Erreur : {register.error}</p>}\n    </div>\n  );\n};\n\nexport default Registration;\n","import { useState, useEffect } from \"react\";\nimport PostCard from \"./PostCard\";\nimport { Link } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst RightNav = ({ currentUser }) => {\n  const [searchInput, setSearchInput] = useState();\n  const [keywordPosts, setKeywordPosts] = useState();\n  const [searchInputUser, setSearchInputUser] = useState();\n  const [keywordUsers, setKeywordUsers] = useState();\n\n  const fetchSearch = () => {\n    fetch(\n      `https://thp-strapi-social-network.herokuapp.com/posts?_sort=created_at:DESC&text_contains=${searchInput}`\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.error) {\n          console.log(response);\n          setKeywordPosts(response);\n        }\n      });\n  };\n\n  const fetchUsers = () => {\n    fetch(\n      `https://thp-strapi-social-network.herokuapp.com/users?_sort=created_at:DESC&username_contains=${searchInputUser}`,\n      {\n        method: \"get\",\n        headers: {\n          Authorization: `Bearer ${Cookies.get(\"token\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.error) {\n          console.log(response);\n          setKeywordUsers(response);\n        }\n      });\n  };\n\n  useEffect(() => {\n    if (searchInput && searchInput.length < 1) {\n      setKeywordPosts([]);\n    } else {\n      fetchSearch();\n    }\n  }, [searchInput]);\n\n  useEffect(() => {\n    if (searchInputUser && currentUser) {\n      fetchUsers();\n      return;\n    }\n    setKeywordUsers([]);\n  }, [searchInputUser]);\n\n  return (\n    <div className=\"RightNav \">\n      <form>\n        <div className=\"mb-5 mt-5\">\n          Looking for something?\n          <input\n            onChange={(event) => setSearchInput(event.target.value)}\n            type=\"text\"\n          />\n          <ul className=\"m-0 p-0\">\n            {keywordPosts &&\n              keywordPosts.map((post) => (\n                <PostCard key={post.id} post={post} />\n              ))}\n          </ul>\n        </div>\n        {currentUser && (\n          <div>\n            Looking for someone?\n            <input\n              onChange={(event) => setSearchInputUser(event.target.value)}\n              type=\"text\"\n            />\n            <ul className=\"m-0 p-0\">\n              {keywordUsers &&\n                keywordUsers.map((user) => (\n                  <p>\n                    <Link to={\"/users/\" + user.slug}>@{user.username}</Link>\n                  </p>\n                ))}\n            </ul>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default RightNav;\n","import Navbar from \"components/Navbar\";\nimport Login from \"pages/Login/Login\";\nimport Home from \"pages/Home/Home\";\nimport Profile from \"pages/Profile/Profile\";\nimport Registration from \"pages/Registration/Registration\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport RightNav from \"components/RightNav\";\n\nconst App = () => {\n  const currentUser = useSelector((state) => state.auth.user);\n\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    />\n  );\n\n  return (\n    <container className=\"SocialApp\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar currentUser={currentUser} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home currentUser={currentUser} />\n          </Route>\n          <Route path=\"/social_network\">\n            <Home currentUser={currentUser} />\n          </Route>\n          <Route path=\"/register\" component={Registration} />\n          <Route path=\"/login\" component={Login} />\n          <PrivateRoute path=\"/users/:userSlug\" exact>\n            <Profile currentUser={currentUser} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/profile\">\n            <Profile currentUser={currentUser} />\n          </PrivateRoute>\n        </Switch>\n        <RightNav currentUser={currentUser} />\n      </Router>\n    </container>\n  );\n};\n\nexport default App;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  EDIT_PROFILE,\n} from \"./authTypes\";\n\nlet userObj = JSON.parse(localStorage.getItem(\"thp_social_network_user_obj\"));\nconst initialUser = userObj ? userObj.user : null;\n\nconst initialState = {\n  token: null,\n  user: initialUser,\n  isLoggedIn: initialUser ? true : false,\n  error: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        user: action.user,\n        isLoggedIn: true,\n        error: \"\",\n      };\n    case REGISTER_FAILURE:\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n        token: null,\n        user: null,\n        isLoggedIn: false,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        token: null,\n        user: null,\n      };\n    case EDIT_PROFILE:\n      return {\n        ...state,\n        user: action.user,\n        token: action.token,\n        isLoggedIn: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {\n  FETCH_POSTS_REQUEST,\n  FETCH_POSTS_SUCCESS,\n  FETCH_POSTS_ERROR,\n  SET_POSTS_COUNT,\n  ADD_POST_SUCCESS,\n  ADD_POST_ERROR,\n  EDIT_POST,\n  DELETE_POST,\n  ADD_LIKE,\n  REMOVE_LIKE,\n} from \"./postsTypes\";\n\nconst initialState = {\n  loading: false,\n  currentPosts: [],\n  error: \"\",\n  count: 0,\n};\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        currentPosts: action.currentPosts,\n      };\n    case FETCH_POSTS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case SET_POSTS_COUNT:\n      return {\n        ...state,\n        count: action.count,\n      };\n    case ADD_POST_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        currentPosts: [...state.currentPosts, action.post],\n      };\n    case EDIT_POST:\n      return {\n        ...state,\n        currentPosts: state.currentPosts.map((post) =>\n          post.id === action.post.id ? action.post : post\n        ),\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        currentPosts: state.currentPosts.filter(\n          (post) => post.id !== action.post.id\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsReducer;\n","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport authReducer from \"./authentication/authReducer\";\nimport postsReducer from \"./posts/postsReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  posts: postsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunkMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}